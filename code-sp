public List<string> ValidateColumnLengths(DataRow dr, Dictionary<string, int> columnMaxLengths)
{
    var errors = new List<string>();

    foreach (var rule in columnMaxLengths)
    {
        var colName = rule.Key;
        var maxLength = rule.Value;

        if (!dr.Table.Columns.Contains(colName))
            continue;

        var value = dr[colName]?.ToString();
        if (!string.IsNullOrWhiteSpace(value) && value.Length > maxLength)
        {
            errors.Add($"{colName} exceeds maximum allowed length ({maxLength}). Provided length: {value.Length}");
        }
    }

    return errors;
}

public static class SpecimenColumnRules
{
    // Define maximum allowed lengths for string columns
    public static readonly Dictionary<string, int> ColumnMaxLengths = new()
    {
        { "Specimen Identifier", 50 },
        { "Panel Identifier", 50 },
        { "Study", 100 },
        { "Sex", 10 },
        { "Sample Type", 50 }
        // Add more columns as needed
    };
}
        errors.AddRange(validator.ValidateColumnLengths(dr, SpecimenColumnRules.ColumnMaxLengths));
